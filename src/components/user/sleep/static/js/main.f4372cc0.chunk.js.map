{"version":3,"sources":["App.js","logo.svg","Canvas.js","reportWebVitals.js","index.js"],"names":["ws","App","props","initCharts","myChart","echarts","document","getElementById","index","option","title","text","name","tooltip","trigger","xAxis","type","data","xData","boundaryGap","yAxis","min","minInterval","axisLabel","show","textStyle","color","formatter","value","texts","push","series","symbol","yData","smooth","areaStyle","x","y","x2","y2","colorStops","offset","global","setOption","window","addEventListener","resize","prevProps","prevState","snapshot","this","nextProps","className","style","display","alignItems","justifyContent","width","id","height","Component","breatheArr","moveArr","levelArr","postureArr","dateArr","minArr","Option","Select","key","useState","move","level","deviceId","setDeviceID","setData","allData","setAllData","timeArr","setTimeArr","rp_id","setRp_id","dateStr","setDateStr","setDateNum","post","setPost","oriData","setOri","startTime","setStartTime","endTime","setEndTime","fetchDate","timestamp","Date","parse","year","getFullYear","month","getMonth","day","getDate","date","axios","sign","md5","did","then","res","console","log","arr","bed","forEach","a","split","i","parseInt","time","posture","onChange","e","target","defaultValue","length","postData","posture_arr","handleChange","map","onClick","WebSocket","onopen","onmessage","JSON","dataArr","nowDate","getHours","getMinutes","getSeconds","onclose","dt_arr","Array","from","Set","msg","alert","isArray","timearr","gobed_time","outbed_time","create","onDelete","start_time","end_time","setTime","flexDirection","fontSize","total_duration","inbed_duration","sleep_time","outbed","n","s","deep_duration","light_duration","awake_duration","sleep_duration","movement","turn_num","turn_svg_num","sleep_eff","r","hx_avg","hx_max","hx_min","hx_arr","outbed_arr","move_arr","sleep_arr","hxsus_arr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4372cc0.chunk.js","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\n// import 'antd/lib/button/style' \r\nimport React, { Component, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport md5 from 'js-md5'\r\nimport Canvas from './Canvas'\r\nimport { Select } from 'antd'\r\nimport * as echarts from 'echarts'\r\nlet breatheArr = []\r\nlet moveArr = []\r\nlet levelArr = []\r\nlet postureArr = []\r\nlet dateArr = []\r\nlet minArr = []\r\nlet ws\r\n\r\nconst { Option } = Select;\r\nconst createUrl = 'http://bah.bodyta.com:19356/rec/report'\r\n// const createUrl = 'http://192.168.31.117:19356/rec/report'\r\nconst delUrl = 'http://bah.bodyta.com:19356/rec/clear'\r\nconst fetchData = 'http://bah.bodyta.com:19356/rec/list'\r\nconst key = '13a43a4fd27e4b9e8acee7b82c11e27c'\r\nconst setUrl = 'http://bah.bodyta.com:19356/rec/settime'\r\n// function useDebounceHook(value, delay) {\r\n//   const [debounceValue, setDebounceValue] = useState(value);\r\n//   useEffect(() => {\r\n//     let timer = setTimeout(() => setDebounceValue(value), delay);\r\n//     return () => clearTimeout(timer);\r\n//   }, [value, delay]);\r\n//   return debounceValue;\r\n// }\r\n\r\nconst initCharts = (props) => {\r\n  // document.createElement('div' , {id : `myChart${props.index}`})\r\n  let myChart = echarts.init(document.getElementById(`myChart${props.index}`));\r\n  let option = {\r\n    title: {\r\n      text: props.name\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: props.xData,\r\n      boundaryGap: false,\r\n      // min:props.xData[0], // 起始\r\n      // max:props.xData[props.xData.length -1] // 终止\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      data: props.index == 8 ? [\"平躺\", \"趴睡\", \"侧躺\"] : '',\r\n      min: 0,\r\n      minInterval: 1,\r\n      axisLabel: {\r\n        show: true,\r\n        textStyle: {\r\n          color: '#000'\r\n        },\r\n        // 这里重新定义就可以\r\n        formatter: props.index == 8 ? function (value) {\r\n          var texts = []\r\n          if (value === 1 || value === '1') {\r\n            texts.push('平躺')\r\n          } else if (value === 2 || value === '2') {\r\n            texts.push('趴睡')\r\n          } else if (value === 3 || value === '3') {\r\n            texts.push('侧躺')\r\n          } else if (value === 4 || value === '4') {\r\n            texts.push('V类')\r\n          } else if (value === 5 || value === '5') {\r\n            texts.push('Ⅵ类')\r\n          }\r\n          return texts\r\n        } : null\r\n      },\r\n\r\n\r\n    },\r\n    series: [\r\n      {\r\n        symbol: \"none\",\r\n        data: props.yData,\r\n        type: 'line',\r\n        smooth: true,\r\n        color: '#000',\r\n        areaStyle: {\r\n          color: {\r\n            type: 'linear',\r\n            x: 0,\r\n            y: 0,\r\n            x2: 1,\r\n            y2: 0,\r\n            colorStops: [{\r\n              offset: 1, color: '#e6e6e6' // 0% 处的颜色\r\n            }, {\r\n              offset: 0, color: '#fff' // 100% 处的颜色\r\n            }],\r\n            global: false // 缺省为 false\r\n          }\r\n        },\r\n\r\n      }\r\n    ],\r\n  };\r\n  myChart.setOption(option);\r\n  window.addEventListener(\"resize\", function () {\r\n    myChart.resize();\r\n  });\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [breathe, setBreathe] = useState('')\r\n  const [move, setMove] = useState('')\r\n  const [level, setLevel] = useState('')\r\n\r\n\r\n  const [deviceId, setDeviceID] = useState('404833897')\r\n  const [data, setData] = useState('')\r\n  const [allData, setAllData] = useState('')\r\n  const [timeArr, setTimeArr] = useState('')\r\n  const [rp_id, setRp_id] = useState('')\r\n  const [dateStr, setDateStr] = useState('')\r\n  const [dateNum, setDateNum] = useState('')\r\n  const [post, setPost] = useState('')\r\n  const [oriData, setOri] = useState('')\r\n\r\n\r\n  const [startTime , setStartTime] = useState('')\r\n  const [endTime, setEndTime] = useState('')\r\n\r\n  // const deviceIddeb = useDebounceHook(deviceId, 1000);\r\n  // useEffect(() => {\r\n\r\n  //   axios.get('http://192.168.31.117/mi/deviceSub?_nonce=yLyaIM5XJi8BnMQj&app_id=10171&data=3nWzYPfeZmGDUGgrJIf0Qemz3vJESQSW0IEPsCjwwh%2B2qm7NOMoFTs72gg8wR20qFMl6sAW4PNHZTTI2jHbl29ASAPfXgtQr8sUkTsXl3OUXYQCMnXhqn5NfvbpAgepPFc6kbYt0zfIItwAHSKYR2TVinJShTVGaGYOEdCwhR%2B0TbW1BJ0B8t%2BsiIxyxbRCvHRm8Ul%2FFJH8awmCVpleNnJehxsQLGcara4%2Fs9g7GadXeVFt5SMWLQY%2FoBxFd6IzAJmD7g%2F7GeQnmvEiljqxJ0WR7AMncnnySxSYeWi4ipML%2BFLfg3jRFqQ%2BO%2FqNcge4Ql%2BI8Dh94PHK573m03uvsZg%3D%3D&signature=KlQMzVEGoWcbY63zGYrGQyJGoH8%3D')\r\n  //   .then((res) => console.log(res))\r\n\r\n  // }, [])\r\n\r\n  const create = () => {\r\n    ws = new WebSocket(`wss://bah.bodyta.com/bed/${deviceId}`)\r\n    ws.onopen = (e) => {\r\n      console.log('ws sussess')\r\n    }\r\n    ws.onmessage = (e) => {\r\n\r\n\r\n      if (JSON.parse(e.data).value) {\r\n        let dataArr = JSON.parse(e.data).value.split('-')\r\n        breatheArr.push(parseInt(dataArr[2], 16))\r\n        moveArr.push(parseInt(dataArr[0], 16))\r\n        levelArr.push(parseInt(dataArr[1], 16))\r\n        let nowDate = new Date()\r\n        let hour = nowDate.getHours()\r\n        let min = nowDate.getMinutes()\r\n        let sec = nowDate.getSeconds()\r\n        let date = hour + ':' + min + ':' + sec\r\n        dateArr.push(date)\r\n\r\n        // setBreathe(parseInt(dataArr[2],16))\r\n        // setMove(parseInt(dataArr[0],16))\r\n        // setLevel(parseInt(dataArr[1],16))\r\n        initCharts({ yData: breatheArr, xData: dateArr, index: 5, name: '呼吸' })\r\n        initCharts({ yData: moveArr, xData: dateArr, index: 6, name: '体动' })\r\n        initCharts({ yData: levelArr, xData: dateArr, index: 7, name: '离床' })\r\n      }\r\n      ws.onclose = () => {\r\n        ws = new WebSocket(`wss://bah.bodyta.com/bed/${deviceId}`)\r\n\r\n      }\r\n\r\n\r\n      if (JSON.parse(e.data).posture) {\r\n        let nowDate = new Date()\r\n        let hour = nowDate.getHours()\r\n        let min = nowDate.getMinutes()\r\n        let date = hour + ':' + min\r\n        minArr.push(date)\r\n        postureArr.push(JSON.parse(e.data).posture == '平躺' ? 1 : JSON.parse(e.data).posture == '趴睡' ? 2 : 3)\r\n        initCharts({ yData: postureArr, xData: minArr, index: 8, name: '坐姿' })\r\n      }\r\n\r\n      // setBreathe(breatheArr)\r\n      // setMove(moveArr)\r\n      // setLevel(levelArr)\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchDate()\r\n    const timestamp = Date.parse(new Date()) / 1000\r\n    const year = new Date().getFullYear()\r\n    const month = new Date().getMonth() + 1\r\n    const day = new Date().getDate()\r\n    const date = `${year}-${month}-${day}`\r\n    axios.post(createUrl, {\r\n      sign: md5(key + timestamp),\r\n      timestamp: timestamp,\r\n      did: deviceId,\r\n      date: dateStr ? dateStr : date\r\n    }).then(res => {\r\n      console.log(res)\r\n      res.data.data?.forEach((a,index) => {\r\n        console.log(a.dt_arr.length==Array.from(new Set(a.dt_arr)).length)\r\n      })\r\n      if (res.data.msg) {\r\n        window.alert(res.data.msg)\r\n      }\r\n\r\n      if (res.data.rp_id) {\r\n        setRp_id(res.data.rp_id)\r\n\r\n      }\r\n      if (Array.isArray(res.data.data)&&res.data.data.length > 0) {\r\n        setData(res.data.data[res.data.data.length - 1])\r\n        let postData = []\r\n        for (let i = 0; i < res.data.data[res.data.data.length - 1].posture_arr.length; i++) {\r\n\r\n          if (res.data.data[res.data.data.length - 1].posture_arr[i] == '平躺') {\r\n            postData.push(0)\r\n          } else if (res.data.data[res.data.data.length - 1].posture_arr[i] == '趴睡') {\r\n            postData.push(1)\r\n          } else if (res.data.data[res.data.data.length - 1].posture_arr[i] == '侧躺') {\r\n            postData.push(2)\r\n          }\r\n        }\r\n        setPost(postData)\r\n        setAllData(res.data.data)\r\n        let timearr = []\r\n        res.data.data.map((a, index) => {\r\n          timearr.push(a.gobed_time + '-' + a.outbed_time)\r\n        })\r\n        setTimeArr(timearr)\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n  const onDelete = () => {\r\n\r\n    const timestamp = Date.parse(new Date()) / 1000\r\n    axios.post(delUrl, {\r\n      sign: md5(key + timestamp),\r\n      timestamp: timestamp,\r\n      rp_id: rp_id\r\n    }).then(res => console.log(res, 'delete'))\r\n  }\r\n  const handleChange = (value) => {\r\n\r\n    setData(allData[value])\r\n\r\n    let postData = []\r\n    for (let i = 0; i < allData[value].posture_arr.length; i++) {\r\n      if (allData[value].posture_arr[i] == '平躺') {\r\n        postData.push(0)\r\n      } else if (allData[value].posture_arr[i] == '趴睡') {\r\n        postData.push(1)\r\n      } else if (allData[value].posture_arr[i] == '侧躺') {\r\n        postData.push(2)\r\n      }\r\n    }\r\n    setPost(postData)\r\n  }\r\n  const fetchDate = () => {\r\n    const timestamp = Date.parse(new Date()) / 1000\r\n    const year = new Date().getFullYear()\r\n    const month = new Date().getMonth() + 1\r\n    const day = new Date().getDate()\r\n    const date = `${year}-${month}-${day}`\r\n    axios.post(fetchData, {\r\n      sign: md5(key + timestamp),\r\n      timestamp: timestamp,\r\n      did: deviceId,\r\n      date: dateStr ? dateStr : date\r\n    }).then(res => {\r\n      console.log(res ,'fetch')\r\n      let arr = [[],[],[],[],[],[],[],[]]\r\n     if( res.data.data) res.data.data.bed.forEach((a, index) => {\r\n        let value = a.value.split('-')\r\n        // value.forEach((b, index) => {\r\n        //   arr[index].push(parseInt(b, 16))\r\n        // })\r\n        for(let i = 0 ; i < 5 ; i++){\r\n          arr[i].push(parseInt(value[i], 16))\r\n        }\r\n        arr[7].push(a.time.split(' ')[1])\r\n      })\r\n      if( res.data.data)res.data.data.posture.forEach((a,index) => {\r\n       \r\n          if (a.value == '平躺') {\r\n            arr[5].push(0)\r\n          } else if (a.value == '趴睡') {\r\n            arr[5].push(1)\r\n          } else if (a.value == '侧躺') {\r\n            arr[5].push(2)\r\n          }\r\n        \r\n        // arr[5].push(a.value)\r\n        arr[6].push(a.time.split(' ')[1])\r\n      })\r\n      setOri(arr)\r\n    })\r\n  }\r\n\r\n  const setTime = () => {\r\n        const timestamp = Date.parse(new Date()) / 1000\r\n        axios.post(setUrl, {\r\n          sign: md5(key + timestamp),\r\n          timestamp: timestamp,\r\n          did: deviceId,\r\n          start_time: startTime,\r\n          end_time : endTime,\r\n        }).then((res) => {\r\n          console.log(res)\r\n        })\r\n      }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      did:<input type=\"text\" name=\"\" id=\"\" value={deviceId} onChange={(e) => { setDeviceID(e.target.value) }} />\r\n      date: <input type=\"date\" onChange={(e) => { setDateStr(e.target.value); setDateNum(Date.parse(new Date(e.target.value)) / 1000); }} />\r\n      {timeArr ? <Select defaultValue={timeArr[timeArr.length - 1]} style={{ width: 240 }} onChange={(e) => handleChange(e)}>\r\n        {timeArr.map((a, index) => {\r\n          return <Option key={index} value={index}>{a}</Option>\r\n        })}\r\n      </Select> : null}\r\n       设置开始时间: <input type=\"text\" onChange={(e) => { setStartTime(e.target.value) }}/>\r\n      设置结束时间: <input type=\"text\" onChange={(e) => { setEndTime(e.target.value) }}/>\r\n      <button onClick={() => { create() }} >请求</button>\r\n      <button onClick={() => { onDelete() }}>删除</button>\r\n      <button onClick={() => { fetchDate() }} >请求原始数据</button>\r\n       <button onClick={() => {setTime()}}>设置请求时间</button>\r\n      {/* {breathe !=='' ? <div>呼吸 {breathe}</div> : null }\r\n      {move!=='' ? <div>体动 {move}</div> : null }\r\n      {level!=='' ? <div>离床 {level}</div> : null } */}\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100vw', flexDirection: 'column' }}>\r\n        <div id=\"myChart5\" style={{ width: '64%', height: 250 }}></div>\r\n        <div id=\"myChart6\" style={{ width: '64%', height: 250 }}></div>\r\n        <div id=\"myChart7\" style={{ width: '64%', height: 250 }}></div>\r\n        <div id=\"myChart8\" style={{ width: '64%', height: 250 }}></div></div>\r\n      {/* {breathe !== '' ? <Canvas yData={breathe} xData={dateArr} index={5}/> : null} */}\r\n      {move !== '' ? <Canvas yData={move} xData={dateArr} index={6} /> : null}\r\n      {level !== '' ? <Canvas yData={level} xData={dateArr} index={7} /> : null}\r\n\r\n      {data ? <>\r\n        <div style={{ fontSize: 30 }}>\r\n          <p>  睡眠总时长 : {data.total_duration}</p>\r\n          <p>   在床时间 : {data.inbed_duration}</p>\r\n          <p>   上床时间 : {data.gobed_time}</p>\r\n          <p>   入睡时间 : {data.sleep_time}</p>\r\n          <p>   离床时间 : {data.outbed_time}</p>\r\n          <p>   离床次数 ： {data.outbed.n}</p>\r\n          <p>   离床程度 : {data.outbed.s}</p>\r\n          <p>  深睡时长 :  {data.deep_duration}</p>\r\n          <p>   浅睡时长 : {data.light_duration}</p>\r\n          <p>   清醒时长 : {data.awake_duration}</p>\r\n          <p>   入睡时长 : {data.sleep_duration}</p>\r\n          <p>   体动次数 : {data.movement.n}</p>\r\n          <p>   体动程度 : {data.movement.s}</p>\r\n          <p>   体位转动总次数 : {data.turn_num}</p>\r\n          <p>   体位转动每小时平均次数 : {data.turn_svg_num}</p>\r\n          <p>睡眠效率百分比 : {data.sleep_eff.r}</p>\r\n          <p> 睡眠效率程度 : {data.sleep_eff.s}</p>\r\n          <p>   呼吸平均值 : {data.hx_avg}</p>\r\n          <p>呼吸最大值 : {data.hx_max}</p>\r\n          <p> 呼吸最小值 : {data.hx_min}</p>\r\n        </div>\r\n\r\n        <Canvas yData={data.hx_arr} xData={data.dt_arr} name='呼吸率数据集合' index={1} />\r\n        <Canvas yData={data.outbed_arr} xData={data.dt_arr} type={['离床', '在床']} index={2} name='离床数据集合' />\r\n        <Canvas yData={data.move_arr} xData={data.dt_arr} index={3} type={['正常', '体动']} name='体动数据集合' />\r\n        <Canvas yData={oriData[1]} xData={oriData[7]}   index={13} name='原始体动集合' />\r\n        <Canvas yData={data.sleep_arr} xData={data.dt_arr} type={['清醒', '浅睡', '深睡']} index={4} name='睡眠状态数据集合' />\r\n        <Canvas yData={data.hxsus_arr} xData={data.dt_arr} type={['正常', '暂停']} index={12} name='呼吸暂停' />\r\n        {/* <Canvas yData={[0,1,1,1]} xData={data.dt_arr} type={['正常', '暂停']} index={12} name='呼吸暂停' /> */}\r\n        <Canvas yData={post} xData={data.dt_arr} type={[\"平躺\", \"趴睡\", \"侧躺\"]} index={10} name='睡姿集合' />\r\n        <Canvas yData={oriData[3]} xData={oriData[7]}   index={14} name='原始呼吸集合' />\r\n        <Canvas yData={oriData[5]} xData={oriData[6]}  type={[\"平躺\", \"趴睡\", \"侧躺\"]} index={15} name='原始睡姿集合' />\r\n      </> : null}\r\n      {\r\n        oriData? <>\r\n        <Canvas yData={oriData[0]} xData={oriData[7]}   index={13} name='原始体动集合' />\r\n        <Canvas yData={oriData[2]} xData={oriData[7]}   index={14} name='原始呼吸集合' />\r\n        <Canvas yData={oriData[5]} xData={oriData[6]}  type={[\"平躺\", \"趴睡\", \"侧躺\"]} index={15} name='原始睡姿集合' />\r\n        </> : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport * as echarts from 'echarts'\r\nimport './chart.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initCharts(this.props);\r\n    }\r\n    componentDidMount(prevProps, prevState, snapshot) {\r\n        this.initCharts(this.props)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        // if(nextProps.yData[0] != this.props.yData[0]){\r\n\r\n        // console.log(nextProps)\r\n        this.initCharts(nextProps);\r\n        // }\r\n    }\r\n\r\n    // static getDerivedStateFromProps(props, state){\r\n    //     // console.log(props,'props')\r\n    // }\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     // console.log(prevProps , 'prevProps')\r\n    //     return prevProps\r\n    // }\r\n    // componentDidUpdate(prevProps, prevState, snapshot){\r\n    //     this.initCharts(snapshot)\r\n    // }\r\n    // static get\r\n    //初始化\r\n    initCharts = (props) => {\r\n        let myChart = echarts.init(document.getElementById(`myChart${props.index}`));\r\n        let option = {\r\n            title: {\r\n                text: props.name\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: props.xData,\r\n                boundaryGap: false,\r\n                // min:props.xData[0], // 起始\r\n                // max:props.xData[props.xData.length -1] // 终止\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                // data: [0,1,2,3,4,5,6],\r\n                min: 0,\r\n                minInterval: 1,\r\n                axisLabel: {\r\n                  show: true,\r\n                  textStyle: {\r\n                    color: '#000'\r\n                  },\r\n                  // 这里重新定义就可以\r\n                  formatter: props.type ? function(value) {\r\n                    var texts = []\r\n                     if (value === 0 || value === '0' || value == '平躺') {\r\n                      texts.push(props.type[0])\r\n                    } else if (value === 1 || value === '1'|| value == '趴睡') {\r\n                      texts.push(props.type[1])\r\n                    } else if (value === 2 || value === '2'|| value == '侧躺') {\r\n                      texts.push(props.type[2])\r\n                    } else if (value === 4 || value === '4') {\r\n                      texts.push('V类')\r\n                    } else if (value === 5 || value === '5') {\r\n                      texts.push('Ⅵ类')\r\n                    }\r\n                    return texts\r\n                  } : null\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    symbol: \"none\",\r\n                    data: props.yData,\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    color: '#000',\r\n                    areaStyle: {\r\n                        color: {\r\n                            type: 'linear',\r\n                            x: 0,\r\n                            y: 0,\r\n                            x2: 1,\r\n                            y2: 0,\r\n                            colorStops: [{\r\n                                offset: 1, color: '#e6e6e6' // 0% 处的颜色\r\n                            }, {\r\n                                offset: 0, color: '#fff' // 100% 处的颜色\r\n                            }],\r\n                            global: false // 缺省为 false\r\n                        }\r\n                    },\r\n\r\n                }\r\n            ],\r\n        };\r\n        myChart.setOption(option);\r\n        window.addEventListener(\"resize\", function () {\r\n            myChart.resize();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"chart\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\r\n                    <div id={`myChart${this.props.index}`} style={{ width: '64%', height: 250 }}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}